name: Build

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    env: 
      DATABASE_URL: postgresql://postgres:123@localhost:5433/epsi_product?schema=public
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: epsi_product
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install --include=dev

      - name: Setup PostgreSQL
        run: |
          # Wait for PostgreSQL to start
          until nc -z localhost 5433; do
            echo "Waiting for PostgreSQL to start..."
            sleep 1
          done

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Apply Prisma Migrations
        run: npx prisma migrate dev --name init
      # - name: Run Prisma
      #   run: npx prisma db push

      # - name: Verify Prisma Client
      #   run: ls -l prisma/generated/client

      # - name: Wait 10 seconds
      #   run: sleep 10

      - name: Run tests
        run: npm test

      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/api-produits:latest
