name: Build

on:
  push:
    branches:
      - main


jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: epsi_product
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install --include=dev

      - name: Setup PostgreSQL
        run: |
          # Wait for PostgreSQL to start
          until nc -z localhost 5433; do
            echo "Waiting for PostgreSQL to start..."
            sleep 1
          done

          # Generate and apply migrations
          npx prisma generate
          npx prisma migrate dev --name init

      - name: Run tests
        run: npm test

      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}